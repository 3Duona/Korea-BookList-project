@page
@model BookList.Pages.Library.MyListModel

@using Microsoft.AspNetCore.Identity
@using System.Security.Claims;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


@{ ViewData["Title"] = "My Book List"; }
<h1>@ViewData["Title"]</h1>

<h1>Your favorite Books</h1>
<p>
    <a asp-page="./Index">Expand your list</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Score)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Url)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.UserBook)
        {
            @if (User.FindFirst(ClaimTypes.NameIdentifier).Value == user.UserID)
            {
            <tr>
                <td>
                    @Html.DisplayFor(model => model.Book.First(x => x.BookId == user.BookId).Title)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Book.First(x => x.BookId == user.BookId).ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Book.First(x => x.BookId == user.BookId).Score)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Book.First(x => x.BookId == user.BookId).UrlTrimmed)
                </td>
                <td>
                    <a asp-page="./BookDetails2" asp-route-id="@user.BookId">Details</a> |
                    <a asp-page="./BookUserDelete" asp-route-id="@user.UserBookId">Remove</a>
                </td>
            </tr>
            }
        }

    </tbody>
</table>
